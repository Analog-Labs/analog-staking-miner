stages:
  - build
  - publish

default:
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure

variables:
  # change to production after https://github.com/paritytech/ci_cd/issues/535 is closed
  CI_IMAGE:                        "paritytech/ci-linux:staging"

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs remove after debug

.rust-info-script:                 &rust-info-script
  - rustup show
  - cargo --version
  - rustup +nightly show
  - cargo +nightly --version
  - bash --version

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - *rust-info-script
  tags:
    - linux-docker

.kubernetes-env:                   &kubernetes-env
  image:                           "${CI_IMAGE}"
  tags:
    - kubernetes-parity-build

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     1 days
    paths:
      - ./artifacts/

### stage:                        build

build:
  stage:                           build
  <<:                              *docker-env
  <<:                              *publish-refs
  <<:                              *collect-artifacts
  script:
    - cargo build --release --locked
    - mv target/release/staking-miner artifacts/
    - mv Dockerfile artifacts/

### stage:                         publish

build-push-image:
  stage:                           publish
  <<:                              *kubernetes-env
  <<:                              *publish-refs
  image:                           quay.io/buildah/stable
  variables:
    GIT_STRATEGY:                  none
    DOCKER_USER:                   $Docker_Hub_User_Parity
    DOCKER_PASS:                   $Docker_Hub_Pass_Parity
    IMAGE_NAME:                    paritytech/staking-miner-v2
  script:
    # version is either "main-<short_sha>" or tag
    - if [[ $CI_COMMIT_REF_NAME == "main" ]];
        then
          export VERSION=main-${CI_COMMIT_SHORT_SHA};
        else
          export VERSION=$CI_COMMIT_REF_NAME;
        fi
    - test "$DOCKER_USER" -a "$DOCKER_PASS" ||
        ( echo "no docker credentials provided"; exit 1 )
    - cd ./artifacts
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg IMAGE_NAME="${IMAGE_NAME}"
        --tag "$IMAGE_NAME:latest"
        --tag "$IMAGE_NAME:$VERSION"
        --file ${DOCKERFILE} .
    # The job will success only on the protected branch
    - echo "$DOCKER_PASS" |
        buildah login --username "$DOCKER_USER" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:latest"
    - buildah push --format=v2s2 "$IMAGE_NAME:$VERSION"
  after_script:
    - buildah logout --all
